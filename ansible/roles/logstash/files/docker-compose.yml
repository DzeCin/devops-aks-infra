version: "3.19"
services:

  fluentd:
    image: fluentd:v1
    command:
      - "fluentd"
      - "-v"
      - "-p"
      - "/fluentd/plugins"
    environment:
      LOKI_URL: "http://gateway:3100"
#      LOKI_USERNAME: sa-fluentd
#      LOKI_PASSWORD: glsa_sXEdFHwxu8rKDvNyJYfONje7c5tKMMFf_2054a7ef
      FLUENTD_CONF: fluentd.conf
    volumes:
      - /var/log:/var/log
      - /etc/fluentd:/fluentd/etc
      # Needed for journald log ingestion:
      - /etc/machine-id:/etc/machine-id
      - /dev/log:/dev/log
      - /var/run/systemd/journal/:/var/run/systemd/journal/
    networks:
      - logstash-network

  grafana:
    image: grafana/grafana:latest
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    depends_on:
      - loki
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
          - name: Loki
            type: loki
            access: proxy
            url: http://gateway:3100
        EOF
        /run.sh
    ports:
      - "3000:3000"
    networks:
      - logstash-network

  loki:
    image: grafana/loki:main
    ports:
        - "3100"
        - "7946"
        - "9095"
    volumes:
        - /etc/loki:/etc/loki
    command: -config.file=/etc/loki/config.yaml
    networks:
      - logstash-network


  gateway:
    image: nginx:latest
    depends_on:
      - loki
    entrypoint:
      - sh
      - -euc
      - |
        cat <<EOF > /etc/nginx/nginx.conf
        user  nginx;
        worker_processes  5;  ## Default: 1

        events {
          worker_connections   1000;
        }

        http {
          resolver 127.0.0.11;

          server {
            listen             3100;

            location = / {
              return 200 'OK';
              auth_basic off;
            }

            location = /api/prom/push {
              proxy_pass       http://loki:3100\$$request_uri;
              proxy_set_header Upgrade \$$http_upgrade;
            }

            location = /api/prom/tail {
              proxy_pass       http://loki:3100\$$request_uri;
              proxy_set_header Upgrade \$$http_upgrade;
              proxy_set_header Connection "upgrade";
            }

            location ~ /api/prom/.* {
              proxy_pass       http://loki:3100\$$request_uri;
            }

            location = /loki/api/v1/push {
              proxy_pass       http://loki:3100\$$request_uri;
            }

            location = /loki/api/v1/tail {
              proxy_pass       http://loki:3100\$$request_uri;
              proxy_set_header Upgrade \$$http_upgrade;
              proxy_set_header Connection "upgrade";
            }

            location ~ /loki/api/.* {
              proxy_pass       http://loki:3100\$$request_uri;
            }
          }
        }
        EOF
        /docker-entrypoint.sh nginx -g "daemon off;"
    ports:
      - "3100:3100"
    networks:
      - logstash-network

networks:
  logstash-network:
    driver: bridge